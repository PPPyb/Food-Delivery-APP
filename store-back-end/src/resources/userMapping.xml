<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="user.sql">

    <select id="getUsersByUserid" parameterType="int" resultType="com.xzr.glassfishDemo.bean.User">
        select * from
            user where userid = #{userid}
    </select>

    <select id="getUserByUsername" parameterType="string" resultType="com.xzr.glassfishDemo.bean.User">
        select * from
            user where username = #{username}
    </select>

    <select id="getAllUsername" parameterType="string" resultType="String">
        select `username` from user
    </select>


    <select id="getpassByUserid" parameterType="int" resultType="String">
        select `password` from user where userid = #{userid}
    </select>


    <insert id="insertUsers" parameterType="com.xzr.glassfishDemo.bean.User"
            useGeneratedKeys="true" keyProperty="userid">
        insert into
            users(username, password, password_salt)
        values(#{username}, #{password}, #{password_salt})
    </insert>


    <insert id="addNewUser" parameterType="com.xzr.glassfishDemo.bean.User"
            useGeneratedKeys="true" keyProperty="userid">
        insert into
            user(username, password, phonenum, email, address)
        values(#{username}, #{password}, #{phonenum}, #{email}, #{address})
    </insert>

    <delete id="deleteUsersByUserid" parameterType="int">
        delete from
            users where userid=#{userid}
    </delete>


    <update id="updateUsersByUserid" parameterType="com.xzr.glassfishDemo.bean.User">
        UPDATE `food`.`user` SET `username` = #{username}, `address` = #{address}, `phonenum` = #{phonenum} WHERE (`userid` = #{userid});
    </update>


    <update id="updateUsersPassByUserid" parameterType="com.xzr.glassfishDemo.bean.User">
        UPDATE `food`.`user` SET `password` = #{password} WHERE (`userid` = #{userid});
    </update>

    <select id="getAllUserid" resultType="int">
        select userid from token
    </select>


    <select id="getUseridByEmail" parameterType="String" resultType="int">
        select userid from `user` where email = #{email}
    </select>

    <select id="getUserid" parameterType="String" resultType="int">
        select userid from user where `username` = #{username}
    </select>
</mapper>
